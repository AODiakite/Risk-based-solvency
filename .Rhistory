library(readxl)
library(kableExtra)
masi <- read_excel("Data/masi.xlsx")
library(readxl)
library(kableExtra)
masi <- read_excel("Application Bs4/Data/masi.xlsx")
library(readxl)
library(kableExtra)
masi <- read_excel("Rapport-PFE_files/Data/masi.xlsx")
head(masi,15)%>%
kbl() %>%
kable_material(c("striped"))
- *Le pilier I* regroupe les *exigences quantitatives*, à savoir les règles de valorisation des actifs et des passifs ainsi que les exigences de capital et leur mode de calcul;
#| label: tbl-triangleAT
#| tbl-cap: Triangle de réglements d'une assurance AT
library(readxl)
library(kableExtra)
triangleAT <- read_excel("Rapport-PFE_files/Data/triangleAT.xlsx")
triangleAT%>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-parametrage
#| tbl-cap: Données de PA et PPNA
library(readxl)
library(kableExtra)
pam <- read_excel("Rapport-PFE_files/Data/parametrage.xlsx")
pam%>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-fdev.
#| tbl-cap: Les facteur de développements
library(readxl)
library(kableExtra)
fdc = data.frame(
fdc1 = c(37312),
fdc2 = c(16890),
fdc3 = c(13263),
fdc4 = c(11770),
fdc5 = c(11161),
fdc6 = c(10585),
fdc7 = c(10450),
fdc8 = c(10234),
fdc9 = c(10176),
fdc10 = c(10164)
)
fdc = fdc/10000
fdc%>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-fdev.
#| tbl-cap: Les facteur de développements
library(readxl)
library(kableExtra)
reglfutur = read_excel("Rapport-PFE_files/Data/reglFutures.xlsx")
reglfutur%>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-fdev.
#| tbl-cap: Les facteur de développements
library(readxl)
library(kableExtra)
reglfutur = read_excel("Rapport-PFE_files/Data/reglFutures.xlsx")
reglfutur%>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-cash
#| tbl-cap: Flux de règlements futurs (Cafh Flows)
library(readxl)
library(kableExtra)
cash = read_excel("Rapport-PFE_files/Data/cash.xlsx")
cash%>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-par2
#| tbl-cap: Paramètres AT
library(kableExtra)
par2 = data.frame(
stringsAsFactors = FALSE,
Parametre = c("RS","PPNA",
"Primes futurs","Taux de frais d’acquisition"),
Valeur = c("0,698546111", "25000", "100000", "0,1")
)
par2%>%
kbl() %>%
kable_material(c("striped"))
library(kableExtra)
par2 = data.frame(
stringsAsFactors = FALSE,
Parametre = c("RS","PPNA",
"Primes futurs","Taux de frais d’acquisition"),
Valeur = c("0,698546111", "25000", "100000", "0,1")
)
par2%>%
kbl() %>%
kable_material(c("striped"))
library(kableExtra)
cad = data.frame(
stringsAsFactors = FALSE,
Cad.0 = c("7,78%"),
Cad.1 = c("21,25%"),
Cad.2 = c("20,00%"),
Cad.3 = c("16,00%"),
Cad.4 = c("11,51%"),
Cad.5 = c("8,88%"),
Cad.6 = c("5,00%"),
Cad.7 = c("4,07%"),
Cad.8 = c("2,21%"),
Cad.9 = c("1,70%"),
Cad.10 = c("1,61%")
)
cad %>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-dec_table
#| tbl-cap: Données du Capital décès dégressif (CDD)
library(kableExtra)
cdd = data.frame(
stringsAsFactors = FALSE,
check.names = FALSE,
ID = c(1400001L, 1400002L, 1400003L),
Age = c(46L, 43L, 35L),
`Année.d'effet` = c(2017L, 2017L, 2014L),
Ann_e_d_expiration = c(2037L, 2042L, 2039L),
Dur_e_de_contrat = c(20L, 25L, 25L),
Durre.contrat.restante = c(15L, 20L, 17L),
Prime = c(55.624, 94.684, 4.113),
Capital_d_c_s_initial = c("2.625.000", "1.785.000", "262.500")
)
cdd %>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-dec_table
#| tbl-cap: Données du Capital décès dégressif (CDD)
library(kableExtra)
cdd = data.frame(
stringsAsFactors = FALSE,
check.names = FALSE,
ID = c(1400001L, 1400002L, 1400003L),
Age = c(46L, 43L, 35L),
`Année.d'effet` = c(2017L, 2017L, 2014L),
Ann_e_d_expiration = c(2037L, 2042L, 2039L),
Dur_e_de_contrat = c(20L, 25L, 25L),
Durre.contrat.restante = c(15L, 20L, 17L),
Prime = c(55624, 94684, 4113),
Capital_d_c_s_initial = c(2625000, 1785000, 262500)
)
cdd %>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-dec_table
#| tbl-cap: Données du Capital décès dégressif (CDD)
library(kableExtra)
cdd = data.frame(
stringsAsFactors = FALSE,
check.names = FALSE,
ID = c(1400001L, 1400002L, 1400003L),
Age = c(46L, 43L, 35L),
`Année.d'effet` = c(2017L, 2017L, 2014L),
Ann_e_d_expiration = c(2037L, 2042L, 2039L),
Dur_e_de_contrat = c(20L, 25L, 25L),
Durre.contrat.restante = c(15L, 20L, 17L),
Prime = c(55624, 94684, 4113),
Capital_d_c_s_initial = c(2625000, 1785000, 262500)
)
cdd %>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-dec_table
#| tbl-cap: Tableau d'amortissement
#| tbl-subcap: CRD désigne le capital restant à payer en cas de décès
library(kableExtra)
amort =  data.frame(
stringsAsFactors = FALSE,
Annee = c(2017L,2018L,
2019L,2020L,2021L,2022L,2023L,2024L,2025L,
2026L,2027L,2028L,2029L,2030L,2031L,2032L,2033L,
2034L,2035L,2036L,2037L,2038L,2039L,2040L,
2041L,2042L),
CRP = c("1785000",
"1742139","1697563","1651204","1602991",
"1552849","1500702","1446468","1390066",
"1331407","1270402","1206957","1140974",
"1072351","1000984","926762","849571",
"769293","685803","598974","508671",
"414757","317086","215508","109867","0"),
Intérêts = c(71400,6968554586,
6790251355,6604815995,641196322,6211396335,
6002806774,578587363,5560263161,5325628274,
508160799,4827826896,4563894557,4289404925,
4003935708,3707047722,3398284216,3077170171,
2743211563,2395894611,2034684982,1659026967,1268342631,
8620309219,4394667445,0),
Amortissement = c(42861,44576,
46359,48213,50142,52147,54233,56403,
58659,61005,63445,65983,68622,71367,
74222,77191,80279,8349,86829,90302,93915,
97671,101578,105641,109867,0),
annuité = c(114261,114261,
114261,114261,114261,114261,114261,
114261,114261,114261,114261,114261,114261,
114261,114261,114261,114261,114261,
114261,114261,114261,114261,114261,114261,
114261,0)
)
amort %>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-dec_table
#| tbl-cap: Tableau d'amortissement
#| tbl-subcap: CRD désigne le capital restant à payer en cas de décès
library(kableExtra)
amort =  data.frame(
annee = c(2017L,2018L,2019L,
2020L,2021L,2022L,2023L,2024L,2025L,2026L,
2027L,2028L,2029L,2030L,2031L,2032L,2033L,
2034L,2035L,2036L,2037L,2038L,2039L,2040L,
2041L,2042L),
CRP = c(1785000L,1742139L,
1697563L,1651204L,1602991L,1552849L,1500702L,
1446468L,1390066L,1331407L,1270402L,1206957L,
1140974L,1072351L,1000984L,926762L,849571L,
769293L,685803L,598974L,508671L,414757L,317086L,
215508L,109867L,0L),
intérêts = c(71400L,69686L,
67903L,66048L,64120L,62114L,60028L,57859L,55603L,
53256L,50816L,48278L,45639L,42894L,40039L,
37070L,33983L,30772L,27432L,23959L,20347L,
16590L,12683L,8620L,4395L,0L),
amortissement = c(42861L,44576L,
46359L,48213L,50142L,52147L,54233L,56403L,58659L,
61005L,63445L,65983L,68622L,71367L,74222L,
77191L,80279L,83490L,86829L,90302L,93915L,
97671L,101578L,105641L,109867L,0L),
annuité = c(114261L,114261L,
114261L,114261L,114261L,114261L,114261L,114261L,
114261L,114261L,114261L,114261L,114261L,
114261L,114261L,114261L,114261L,114261L,114261L,
114261L,114261L,114261L,114261L,114261L,114261L,
0L)
)
amort %>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-bevie
#| tbl-cap: Meilleure estimation des granatie probabilisée et des frais de gestions
library(kableExtra)
bevie =  data.frame(
`Meilleure estimation des garanties probabilisées` = c("183 895 103"),
`Meilleure estimation des frais de gestions` = c("183 895 103")
)
bevie %>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-bevie
#| tbl-cap: Meilleure estimation des granatie probabilisée et des frais de gestions
library(kableExtra)
bevie =  data.frame(
`Meilleure estimation des garanties probabilisées` = c("183 895 103"),
`Meilleure estimation des frais de gestions` = c("3 725 418"),check.names = F
)
bevie %>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-csr_vie_non
#| tbl-cap: CSR Souscription
library(kableExtra)
csr =  data.frame(
stringsAsFactors = FALSE,
`` = c("CSR Souscription vie", "CSR Souscription non-vie"),
#| label: tbl-csr_vie_non
#| tbl-cap: CSR Souscription
library(kableExtra)
csr =  data.frame(
stringsAsFactors = FALSE,
X = c("CSR Souscription vie", "CSR Souscription non-vie"),
y= c("52 496 918", "197 616")
)
csr = t(csr)
rownames(csr) = NULL
csr %>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-csr_sousrisk
#| tbl-cap: CSR Sous-risques
library(kableExtra)
csr =  data.frame(
stringsAsFactors = FALSE,
X = c("CSR mortalité", "CSR catastrophe", "CSR frais"),
Y = c("52 485 959", "353 884", "1 012 563")
)
csr = t(csr)
rownames(csr) = NULL
csr %>%
kbl() %>%
kable_material(c("striped"))
#| label: tbl-RM
#| tbl-cap: Marges de risques
library(kableExtra)
csr =  data.frame(
stringsAsFactors = FALSE,
X = c("Marge de risque non-vie", "Marge de risque vie"),
Y = c("9 338 125", "19 965 000")
)
csr = t(csr)
rownames(csr) = NULL
csr %>%
kbl() %>%
kable_material(c("striped"))
#| Label: fig-gbmPlot
#| fig-cap: Simulation de la trajectoire du prix de l'action X par la méthode de Monte Carlo en utilisant le modèle de Black and Scholes
library(ggplot2)
SBM <- function(t0 = 0,T_ = 1,N = 10000,nsim = 100){
X <- Map(
function(x) {c(0,rnorm(n= N,mean = 0,sd = sqrt((T_ -t0)/N))) %>%
cumsum()},
x = as.list(rep(N,nsim))
) %>%
bind_cols() %>%
`names<-`(paste0("X",1:nsim))
X <- X %>%
mutate(t=seq(t0,T_,length.out = N +1) ) %>%
relocate(t)
plt <- X %>%
reshape2::melt(id="t",value.name = "Brownian") %>%
ggplot(aes(x=t, y=Brownian, colour=variable)) +
geom_line(show.legend = F) +
ylab("Brownian motion")+
hrbrthemes::theme_ipsum(grid = "")
list(data = X,plots =plt )
}
# Geometric
GBM <- function(S0=11637.35,mu = -.004,sigma =.01065,t0=0,T_= 1,N = 10000,nsim = 100){
sbm <- SBM(t0 = t0,T_ = T_,N = N,nsim = nsim)
t <- sbm$data$t
listSBM <-  as.list(sbm$data[,-1])
S = Map(function(x){
S0*exp(t*(mu-0.5*sigma^2)+sigma*listSBM[[x]])
},x=1:nsim) %>%
bind_cols() %>%
`names<-`(paste0("X",1:nsim)) %>%
mutate(t=t) %>%
relocate(t)
plt <- S %>%
reshape2::melt(id="t",value.name = "GBM") %>%
ggplot(aes(x=t, y=GBM, colour=variable)) +
geom_line(show.legend = F) +
ylab("Geometric Brownian Motion")+
hrbrthemes::theme_ipsum(grid = "XY")
mean_path = apply(S[,-1],1,mean)
ST = mean_path[length(mean_path)]
plt_mean <- ggplot(data = NULL,aes(x=t, y=mean_path,color = "red")) +
geom_line(show.legend = F) +
ylab("Cours") +
hrbrthemes::theme_ipsum(grid = "XY")
list(data = S,plots =plt ,
mean_path = mean_path,
ST = ST,
plt_mean = plt_mean)
}
GBM_Sim = GBM()
library(dplyr)
#| Label: fig-gbmPlot
#| fig-cap: Simulation de la trajectoire du prix de l'action X par la méthode de Monte Carlo en utilisant le modèle de Black and Scholes
library(ggplot2)
SBM <- function(t0 = 0,T_ = 1,N = 10000,nsim = 100){
X <- Map(
function(x) {c(0,rnorm(n= N,mean = 0,sd = sqrt((T_ -t0)/N))) %>%
cumsum()},
x = as.list(rep(N,nsim))
) %>%
bind_cols() %>%
`names<-`(paste0("X",1:nsim))
X <- X %>%
mutate(t=seq(t0,T_,length.out = N +1) ) %>%
relocate(t)
plt <- X %>%
reshape2::melt(id="t",value.name = "Brownian") %>%
ggplot(aes(x=t, y=Brownian, colour=variable)) +
geom_line(show.legend = F) +
ylab("Brownian motion")+
hrbrthemes::theme_ipsum(grid = "")
list(data = X,plots =plt )
}
# Geometric
GBM <- function(S0=11637.35,mu = -.004,sigma =.01065,t0=0,T_= 1,N = 10000,nsim = 100){
sbm <- SBM(t0 = t0,T_ = T_,N = N,nsim = nsim)
t <- sbm$data$t
listSBM <-  as.list(sbm$data[,-1])
S = Map(function(x){
S0*exp(t*(mu-0.5*sigma^2)+sigma*listSBM[[x]])
},x=1:nsim) %>%
bind_cols() %>%
`names<-`(paste0("X",1:nsim)) %>%
mutate(t=t) %>%
relocate(t)
plt <- S %>%
reshape2::melt(id="t",value.name = "GBM") %>%
ggplot(aes(x=t, y=GBM, colour=variable)) +
geom_line(show.legend = F) +
ylab("Geometric Brownian Motion")+
hrbrthemes::theme_ipsum(grid = "XY")
mean_path = apply(S[,-1],1,mean)
ST = mean_path[length(mean_path)]
plt_mean <- ggplot(data = NULL,aes(x=t, y=mean_path,color = "red")) +
geom_line(show.legend = F) +
ylab("Cours") +
hrbrthemes::theme_ipsum(grid = "XY")
list(data = S,plots =plt ,
mean_path = mean_path,
ST = ST,
plt_mean = plt_mean)
}
GBM_Sim = GBM()
GBM_Sim$plt_mean
masi <- masi[1:251,1:2]
library(ggplot2)
ggplot(data = masi, aes(x = Date, y = Dernier))+
geom_line()
ggplot(data = masi, aes(x = Date, y = Dernier))+
geom_line()+
hrbrthemes::ipsum()+
ylab("Cours observés")
ggplot(data = masi, aes(x = Date, y = Dernier))+
geom_line()+
hrbrthemes::theme_ipsum()+
ylab("Cours observés")
ggplot(data = masi, aes(x = Date, y = Dernier))+
geom_line(col = "red")+
hrbrthemes::theme_ipsum()+
ylab("Cours observés")
library(kableExtra)
val = data.frame(
stringsAsFactors = FALSE,
Actif = c("Actions cotées à la bourse","Titres OPCVM et OPCI",
"Titres OPCC et FPCT",
"Titres de créances négociables , obligations et bons","Immobilisations corporelles",
"Autres créances","Immobilisations en non valeur",
"Immobilisations incorporelles",
"Actifs immobiliers hors OPCI","Autres actifs"),
Valorisation = c("Dernier cours coté","Dernière valeur liquidative",
"Dernière valeur connue","Valeur de marché","Valeur comptable",
"Valeur comptable","Valeur nulle","Valeur nulle",
"Valeur de transaction ( sinon valeur comptable )",
"Valeur d’expert (sinon valeur comptable )")
)
val %>%
kbl() %>%
kable_material(c("striped"))
abv = data.frame(
stringsAsFactors = FALSE,
Abréviation = c("Adj","AT","BE",
"BE_eng","BEC_eng","BEFG","BEGP","BEP","BEPC",
"BES","BESC","CSR","CSRB","CSRO","CU","Dec",
"Dot","Enc","FDF","FFGF","FG"),
Désignation = c("Ajustement pour défaut de contrepartie","Accident de travail",
"Best Estimate","Meilleure Estimation des engagements",
"meilleure estimation des engagements cédés",
"Meilleure Estimation des frais de gestion",
"Meilleure Estimation des garanties probabilisées",
"Meilleure estimation des engagements pour primes",
"Meilleure Estimation des Engagements pour Primes cédés",
"Meilleure estimation des engagements pour sinistres",
"Meilleure Estimation des Engagements pour Sinistres cédés","Capital de Solvabilité Requis",
"Capital de solvabilité requis de base",
"Capital de solvabilité requis relative au risque Opérationnel",
"Charge Ultime","Les décaissements","Dotations",
"Les encaissements",
"Bénéfices Discrétionnaires Futurs","Flux de Frais de Gestion Futurs",
"Frais de gestions"),
Abréviation = c("FGU","FRFP","MR",
"NbC","PA","PC","PD","PFPA","PPB","PPNA",
"PT","RègC","RègF","RF","RS","RT","ST","TC",
"TFG","TL","TPB"),
Désignation = c("Frais de gestion unitaire","Flux de règlements futurs probabilisés",
"Marge de Risque","Nombre de contrats",
"Primes Acquises","Part des Cessionnaires",
"Probabilité de Défaut","Primes Futures Probabilisé et Actualisé",
"Provision pour participation aux bénéfices",
"Provision pour primes non Acquises",
"Provision Technique","Règlements cumulés","Règlements futurs",
"les résultats financiers.","ratio de sinistralité",
"les résultats techniques.","Soldes Techniques",
"Taux de Cession","Taux de Frais de Gestion",
"Taux de Liquidation",
"Taux de participation aux bénéfices")
)
abv %>%
kbl() %>%
kable_material(c("striped"))
