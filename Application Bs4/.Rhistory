df$CRP[1] = cap_initial
df$Interest[1] = cap_initial*tx_interet
df$Ammortissement[1] = annuite - df$Interest[1]
for (i in 2:maturite) {
df$CRP[i] = df$CRP[i-1] - df$Ammortissement[i-1]
df$Interest[i] = df$CRP[i]*tx_interet
df$Ammortissement[i] = annuite - df$Interest[i]
}
df
}
tableau_amort(2017,20,2625000,4/100)
tableau_amort = function(Annee,maturite,cap_initial,tx_interet,annee_max_proj = 2042){
annuite = (cap_initial*tx_interet)*(1/(1-(1+tx_interet)^(-maturite)))
df = data.frame(Annee = Annee + 0:(maturite-1), CRP = 0,
Interest = 0, Ammortissement = 0,
Annuite = annuite)
df$CRP[1] = cap_initial
df$Interest[1] = cap_initial*tx_interet
df$Ammortissement[1] = annuite - df$Interest[1]
for (i in 2:maturite) {
df$CRP[i] = df$CRP[i-1] - df$Ammortissement[i-1]
df$Interest[i] = df$CRP[i]*tx_interet
df$Ammortissement[i] = annuite - df$Interest[i]
}
max_annee = max(df$Annee)
if(max_annee < annee_max_proj){
df0 = data.frame(Annee = (max_annee+1):annee_max_proj, CRP = 0,
Interest = 0, Ammortissement = 0,
Annuite = 0)
df = rbind(df,df0)
}
df
}
tableau_amort(2017,20,2625000,4/100)
tableau_amort(2014,25,262500,4/100)
tableau_amort(2014,20,262500,4/100)
tableau_amort(2014,20,2625000,4/100)
tableau_amort(2017,25,1785000,4/100)
4.100
4/100
styler:::style_selection()
df$CRP
dim(df)
25-20
5:25
length(5:20)
length(5:25)
df
tail(df,10)
Matrice_Capitaux <- function(Annee,maturite,cap_initial,
max_duree_rest = max(Duree_contrat_rest)){
Map(
function(x, y, z) {
T_AMORT = tableau_amort(x,y,z)
T_AMORT = tail(T_AMORT,max_duree_rest)
T_AMORT$CRP
},
x = Annee,
y= maturite,
z = cap_initial
)
}
maturite
names(deces_deg_unique)
Matrice_Capitaux(deces_deg_unique$`Année d'effet`,deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
tableau_amort = function(Annee,maturite,cap_initial,tx_interet = 0.04 ,annee_max_proj = 2042){
annuite = (cap_initial*tx_interet)*(1/(1-(1+tx_interet)^(-maturite)))
df = data.frame(Annee = Annee + 0:(maturite-1), CRP = 0,
Interest = 0, Ammortissement = 0,
Annuite = annuite)
df$CRP[1] = cap_initial
df$Interest[1] = cap_initial*tx_interet
df$Ammortissement[1] = annuite - df$Interest[1]
for (i in 2:maturite) {
df$CRP[i] = df$CRP[i-1] - df$Ammortissement[i-1]
df$Interest[i] = df$CRP[i]*tx_interet
df$Ammortissement[i] = annuite - df$Interest[i]
}
max_annee = max(df$Annee)
if(max_annee < annee_max_proj){
df0 = data.frame(Annee = (max_annee+1):annee_max_proj, CRP = 0,
Interest = 0, Ammortissement = 0,
Annuite = 0)
df = rbind(df,df0)
}
df
}
Matrice_Capitaux(deces_deg_unique$`Année d'effet`,deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
result = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
result=as.matrix(result)
View(result)
result = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
length(result)
bind_cols(result)
df_res = bind_rows(result)
df_res = as.data.frame(result)
View(df_res)
dim(df_res)
df_res = t(df_res)
rownames(df_res) = NULL
Matrice_Capitaux <- function(Annee,maturite,cap_initial,
max_duree_rest = max(Duree_contrat_rest)){
result = Map(
function(x, y, z) {
T_AMORT = tableau_amort(x,y,z)
T_AMORT = tail(T_AMORT,max_duree_rest)
T_AMORT$CRP
},
x = Annee,
y= maturite,
z = cap_initial
)
df_result = as.data.frame(result)
df_result = t(df_result)
rownames(df_res) = NULL
df_res
}
df_capitaux = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
View(df_capitaux)
View(mat_tqx)
Mat_tPx <- function(mat_ages){
tPx(mat_ages)
}
Mat_tQx <- function(mat_ages){
tQx(mat_ages)
}
View(mat_ages)
mat_tqx = Mat_tQx(mat_ages)
proj_cap = mat_tqx*df_capitaux
dim(df_capitaux)
dim(mat_tqx)
mat_ages = Mat_Ages(Duree_contrat_rest,ages)
mat_tqx = Mat_tQx(mat_ages)
proj_cap = mat_tqx*df_capitaux
View(proj_cap)
Mat_Ages <- function(Duree_contrat_rest,ages,TD = TD_88_90){
ncolMatrix = max(Duree_contrat_rest)
nrowMatrix = length(Duree_contrat_rest)
mat_tqx = matrix(rep(0:(ncolMatrix-1),nrowMatrix),ncol = ncolMatrix,byrow = TRUE)
mat_ages = rep(ages,each = ncolMatrix)
mat_ages = matrix(mat_ages,ncol = ncolMatrix,byrow = TRUE)
mat_ages = mat_ages+mat_tqx
mat_ages
}
df_capitaux = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,
deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
mat_ages = Mat_Ages(Duree_contrat_rest,ages)
mat_tqx = Mat_tQx(mat_ages)
proj_cap = mat_tqx*df_capitaux
View(df_capitaux)
mat_tpx = Mat_tPx(mat_ages)
View(mat_tpx)
cbind(1,mat_tpx)
mat_tpx = Mat_tPx(mat_ages)
mat_tpx = cbind(1,mat_tpx[,-ncol(mat_tpx)])
mat_tpx_cumul = t(apply(mat_tpx,1,cumprod))
proj_cap = mat_tqx*df_capitaux*mat_tpx_cumul
View(mat_tqx)
View(mat_ages)
# Proba de survie -----
tPx <- function(x,TD = TD_88_90){
tryCatch(
ifelse(x+2 > 111 | TD[[2]][x+1] == 0,
0,
TD[[2]][x+2]/TD[[2]][x+1]),
error = function(e){
return(0)
}
)
}
# Proba de Deces -----
tQx <- function(x,TD = TD_88_90){
1 - tPx(x,TD)
}
tQx(43)
tPx(43)
TD_88_90
93515/94182
View(df_capitaux)
0.004658837*2040289.3
View(proj_cap)
ZC
apply(proj_cap,2,sum)
(1:10)/1:11
ZC
library(readxl)
provisionement_Vie <- read_excel("Data/provisionement Vie.xlsx",
sheet = "ZC-30-12-2022", skip = 1)
View(provisionement_Vie)
ZC = provisionement_Vie$`Taux zéro coupon`
ZC
projection_cap <- function(proj_cap){
apply(proj_cap,2,sum)
}
proj_cap_vect = projection_cap(proj_cap)
proj_cap_vect
BEGP_vie <- function(proj_cap_vect, ZC){
nn = length(proj_cap_vect)
sum(proj_cap_vect/ZC[1:nn])
}
BEGP_vie(proj_cap_vect,ZC)
sum(proj_cap_vect)
BEGP_vie <- function(proj_cap_vect, ZC){
nn = length(proj_cap_vect)
denom = (1+ZC[1:nn])^(1:nn)
sum(proj_cap_vect/denom)
}
proj_cap_vect = projection_cap(proj_cap)
sum(proj_cap_vect )
BEGP_vie <- function(proj_cap_vect, ZC){
nn = length(proj_cap_vect)
denom = (1+ZC[1:nn])^(1:nn)
sum(proj_cap_vect/denom)
}
BEGP_vie(proj_cap_vect,ZC)
library(readxl)
TZC_31_12_2021 <- read_excel("Data/TZC_31_12_2021.xlsx",
skip = 1)
ZC_2021 = TZC_31_12_2021$`Taux zéro coupon`
BEGP_vie(proj_cap_vect,ZC_2021)
proj_cap_vect
ZC
nn = length(proj_cap_vect)
ZC[1:nn]
nn = length(proj_cap_vect)
denom = (1+ZC[1:nn])^(1:nn)
proj_cap_vect/denom
NB_contrat = Mat_tPx(mat_ages)
NB_contrat = apply(NB_contrat,1,cumprod)
View(NB_contrat)
NB_contrat = Mat_tPx(mat_ages)
NB_contrat = t(apply(NB_contrat,1,cumprod))
rep(1,0)
NB_contrat = Mat_tPx(mat_ages)
NB_contrat = t(apply(NB_contrat,1,cumprod))
Duree_contrat_rest
max_duree_rest = max(Duree_contrat_rest)
Map(\(x){
c(rep(1,x),rep(1,max_duree_rest-x))
}, x = Duree_contrat_rest)
Map(\(x){
c(rep(1,x),rep(0,max_duree_rest-x))
}, x = Duree_contrat_rest)
max_duree_rest = max(Duree_contrat_rest)
mat_duree = Map(\(x){
c(rep(1,x),rep(0,max_duree_rest-x))
}, x = Duree_contrat_rest)
mat_duree = as.data.frame(mat_duree)
View(mat_duree)
mat_duree = t(mat_duree)
rownames(mat_duree) = NULL
NB_contrat = NB_contrat*mat_duree
NB_contrat = apply(NB_contrat,2,sum)
NB_contrat
ZC
# Nombre de contrat
# Parametre FG_moyen
FG_moyen = 100
FG_t = FG_moyen*NB_contrat
14/100
1.5/100
FG_moyen = 100
Augmentation_X = 0.14
Majoration_X = 0.015
FG_t
## FG_t après choque
vect_choque_FG = 1+c(Augmentation_X,rep(Majoration_X,max_duree_rest-1))
FG_t_Choque = FG_moyen * vect_choque_FG
FG_t_Choque
## FG_t après choque
vect_choque_FG = 1+c(Augmentation_X,rep(Majoration_X,max_duree_rest-1))
FG_t_Choque = FG_moyen * cumprod(vect_choque_FG)
FG_t_Choque
FG_t
FG_t_Choque = FG_t_Choque * NB_contrat
FG_t_Choque
# BEFG
BEFG = \(FG_t,ZC){
n_max = length(FG_t)
denom = (1 + ZC[1:n_max])^(1:n_max)
sum(FG_t/denom)
}
BEFG(FG_t,ZC)
BEFG(FG_t_Choque,ZC)
proj_cap_vect = projection_cap(proj_cap)
proj_cap_vect
Mat_Proj_Cap <- function(Duree_contrat_rest,ages,choc = 0){
mat_ages = Mat_Ages(Duree_contrat_rest,ages)
mat_tqx =(1+choc) * Mat_tQx(mat_ages)
mat_tpx = 1 -  mat_tqx
mat_tpx = cbind(1,mat_tpx[,-ncol(mat_tpx)])
mat_tpx_cumul = t(apply(mat_tpx,1,cumprod))
# Matrice de projection des capitaux
mat_tqx*df_capitaux*mat_tpx_cumul
}
proj_cap = Mat_Proj_Cap(Duree_contrat_rest,ages,choc = 0)
proj_cap
proj_cap_choc_003 = Mat_Proj_Cap(Duree_contrat_rest,ages,choc = 0.03)
proj_cap_choc_002 = Mat_Proj_Cap(Duree_contrat_rest,ages,choc = 0.02)
proj_cap_vect_003 = projection_cap(proj_cap_choc_003)
proj_cap_vect_002 = projection_cap(proj_cap_choc_002)
proj_cap_choc_003
proj_cap_vect_003
BEGP_vie <- function(proj_cap_vect, ZC){
nn = length(proj_cap_vect)
denom = (1+ZC[1:nn])^(1:nn)
sum(proj_cap_vect/denom)
}
BEGP_vie(proj_cap_vect_003,ZC)
View((1+3/100)*mat_tqx)
View(mat_ages)
View(1-((1+3/100)*mat_tqx))
View(1-((1+30/100)*mat_tqx))
proj_cap = Mat_Proj_Cap(Duree_contrat_rest,ages,choc = 0)
proj_cap_choc_003 = Mat_Proj_Cap(Duree_contrat_rest,ages,choc = 0.3)
proj_cap_choc_002 = Mat_Proj_Cap(Duree_contrat_rest,ages,choc = 0.2)
projection_cap <- function(proj_cap){
apply(proj_cap,2,sum)
}
proj_cap_vect = projection_cap(proj_cap)
proj_cap_vect_003 = projection_cap(proj_cap_choc_003)
proj_cap_vect_002 = projection_cap(proj_cap_choc_002)
proj_cap_vect_003
BEGP_vie(proj_cap_vect_003,ZC)
BEGP_vie(proj_cap_vect_002,ZC)
BEGP = BEGP_vie(proj_cap_vect,ZC)
BEGP_Choc_003 = BEGP_vie(proj_cap_vect_003,ZC)
BEGP_Choc_002 = BEGP_vie(proj_cap_vect_002,ZC)
BGP
BEGP
BEGP_Choc_002
BEGP_Choc_002
BEFG(FG_t_Choque,ZC)
BEFG_vie = BEFG(FG_t,ZC)
BEFG_vie_Choque = BEFG(FG_t_Choque,ZC)
BEFG_vie_Choque
max(c(1,5,-6,8,4),0)
taux_cession = 1/100
PD = 1.2/100
BEGP
BEGP_Choc_002
proj_cap_vect
BEGPi = proj_cap_vect
BEGP_cede = BEGPi*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
} x = BEGPi, y = 1:length(BEGPi))
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = BEGPi, y = 1:length(BEGPi))
Adj_i
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGPi), y = as.list(1:length(BEGPi)))
Adj_i
PD
taux_cession
BEGP_cede = BEGPi*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i
BEGP_cede
taux_cession
1/100
BEGPi
proj_cap_vect
proj_cap
apply(proj_cap,3,sum)
apply(proj_cap,2,sum)
BEGP_cede = cumsum(rev(BEGPi))
BEGP_cede = rev(BEGP_cede)
BEGP_cede
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede
BEGP_cede = BEGPi*taux_cession
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGPi*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_i
BEGP_cede
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP
BEGP_cede
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGPi_actualised
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede
BEGP_cede = rev(BEGP_cede)
BEGP_cede
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_i
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede
BEGP_cede = rev(BEGP_cede)
BEGP_cede
BEGP_cede = BEGP_cede*taux_cession
BEGP_cede
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede
taux_cession
1/100
BEGP_cede*taux_cession
BEGP_cede
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_i
Ajustement_DC <- \(BEGPi,ZC,taux_cession,PD){
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
}
Ajustement_DC(BEGPi,ZC,0.01,1.2/100)
Adj_i
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
Adj_act_i
sum(Adj_act_i)
1.2/100
Ajustement_DC <- \(BEGPi,ZC,taux_cession,PD){
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
}
Ajustement_DC(BEGPi,ZC,0.01,0.012)
BEGPi
ZC
Ajustement_DC <- \(BEGPi,ZC,taux_cession,PD){
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
}
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGPi_actualised
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGPi_actualised
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
BEGP_cede
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_i
Ajustement_DC <- \(BEGPi,ZC,taux_cession,PD){
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
}
BEGP_Choc_002
BEGP_Choc_003
BEFG_vie = BEFG(FG_t,ZC)
BEFG_vie_Choque = BEFG(FG_t_Choque,ZC)
BEFG_vie
BEFG_vie_Choque
