BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP
BEGP_cede
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGPi_actualised
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede
BEGP_cede = rev(BEGP_cede)
BEGP_cede
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_i
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede
BEGP_cede = rev(BEGP_cede)
BEGP_cede
BEGP_cede = BEGP_cede*taux_cession
BEGP_cede
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede
taux_cession
1/100
BEGP_cede*taux_cession
BEGP_cede
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_i
Ajustement_DC <- \(BEGPi,ZC,taux_cession,PD){
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
}
Ajustement_DC(BEGPi,ZC,0.01,1.2/100)
Adj_i
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
Adj_act_i
sum(Adj_act_i)
1.2/100
Ajustement_DC <- \(BEGPi,ZC,taux_cession,PD){
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
}
Ajustement_DC(BEGPi,ZC,0.01,0.012)
BEGPi
ZC
Ajustement_DC <- \(BEGPi,ZC,taux_cession,PD){
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
}
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGPi_actualised
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGPi_actualised
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
BEGP_cede
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_i
Ajustement_DC <- \(BEGPi,ZC,taux_cession,PD){
BEGPi_actualised = BEGPi/((1+ZC[1:length(BEGPi)])^(1:length(BEGPi)))
BEGP_cede = cumsum(rev(BEGPi_actualised))
BEGP_cede = rev(BEGP_cede)
BEGP_cede = BEGP_cede*taux_cession
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BEGP_cede), y = as.list(1:length(BEGP_cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
}
BEGP_Choc_002
BEGP_Choc_003
BEFG_vie = BEFG(FG_t,ZC)
BEFG_vie_Choque = BEFG(FG_t_Choque,ZC)
BEFG_vie
BEFG_vie_Choque
cad_liq
r_hat
cad_actualiser
cad_actualiser = cad_liq/((1+ZC[1:length(cad_liq)])^(1:length(cad_liq)))
cad_actualiser
cad_liq
cad_liq0 = cad_liq[-1]
cad_actualiser = cad_liq0/((1+ZC[1:length(cad_liq0)])^(1:length(cad_liq0)))
cad_actualiser
cad_actualiser_cumule = rev(cumsum(rev(cad_actualiser)))
cad_actualiser_cumule
rs
PPNA=25000
RS = rs
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFP_Vect
PFP=100000
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFP_Vect
BEPrimes
PFP
100000
cad
cad_liq
cad_actualiser_cumule
PFP = 90000
cad_liq0 = cad_liq[-1]
cad_actualiser = cad_liq0/((1+ZC[1:length(cad_liq0)])^(1:length(cad_liq0)))
cad_actualiser_cumule = rev(cumsum(rev(cad_actualiser)))
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFP_Vect
BEPrimes
taux_acquistion = 0.4
taux_acquistion = 0.1
cad_liq0 = cad_liq[-1]
cad_actualiser = cad_liq0/((1+ZC[1:length(cad_liq0)])^(1:length(cad_liq0)))
cad_actualiser_cumule = rev(cumsum(rev(cad_actualiser)))
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
PFPA = (1-taux_acquistion)*PFP_Vect
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFP_Vect
BEPrimes
cad_liq0 = cad_liq[-1]
cad_actualiser = cad_liq0/((1+ZC[1:length(cad_liq0)])^(1:length(cad_liq0)))
cad_actualiser_cumule = rev(cumsum(rev(cad_actualiser)))
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
PFPA = (1-taux_acquistion)*PFP_Vect
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFPA
BEPrimes
PFPA
taux_acquistion=0.1
cad_liq0 = cad_liq[-1]
cad_actualiser = cad_liq0/((1+ZC[1:length(cad_liq0)])^(1:length(cad_liq0)))
cad_actualiser_cumule = rev(cumsum(rev(cad_actualiser)))
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
PFPA = (1-taux_acquistion)*PFP_Vect
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFPA
BEPrimes
PFP
PFPA
PFP = 100000
cad_liq0 = cad_liq[-1]
cad_actualiser = cad_liq0/((1+ZC[1:length(cad_liq0)])^(1:length(cad_liq0)))
cad_actualiser_cumule = rev(cumsum(rev(cad_actualiser)))
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
PFPA = (1-taux_acquistion)*PFP_Vect
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFPA
BEPrimes
# Opeération d'assurance vie
Ajustement_DC_NVie <- \(r_hat,cad_liq,ZC,RS,PPNA,PFP,taux_acquistion){
cad_liq0 = cad_liq[-1]
cad_actualiser = cad_liq0/((1+ZC[1:length(cad_liq0)])^(1:length(cad_liq0)))
cad_actualiser_cumule = rev(cumsum(rev(cad_actualiser)))
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
PFPA = (1-taux_acquistion)*PFP_Vect
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFPA
}
Ajustement_DC_NVie(r_hat,cad_liq,ZC,RS,PPNA,PFP,taux_acquistion)
# Opeération d'assurance vie
Ajustement_DC_NVie <- \(r_hat,cad_liq,ZC,RS,PPNA,PFP,taux_acquistion){
cad_liq0 = cad_liq[-1]
cad_actualiser = cad_liq0/((1+ZC[1:length(cad_liq0)])^(1:length(cad_liq0)))
cad_actualiser_cumule = rev(cumsum(rev(cad_actualiser)))
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
PFPA = (1-taux_acquistion)*PFP_Vect
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFPA
BEPrimes
}
Ajustement_DC_NVie(r_hat,cad_liq,ZC,RS,PPNA,PFP,taux_acquistion)
5/100
r_hat
BESinistre = r_hat/((1+ZC[1:length(r_hat)])^(1:length(r_hat)))
BESinistre = rev(cumsum(rev(BESinistre)))
BESinistre
tc_prime = 0.05
tc_sinistre = 0.03
BEPrimes_Cede = tc_prime*BEPrimes
BESinistre = r_hat/((1+ZC[1:length(r_hat)])^(1:length(r_hat)))
BESinistre = rev(cumsum(rev(BESinistre)))
BESinistre_Cede = tc_sinistre*BESinistre
BEPrimes_Cede
BE_ENG_Cede = BESinistre_Cede+BEPrimes_Cede
BE_ENG_Cede
PD
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BE_ENG_Cede), y = as.list(1:length(BE_ENG_Cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
Adj_act_i
sum(Adj_act_i)
# Opeération d'assurance vie
Ajustement_DC_NVie <- \(r_hat,cad_liq,ZC,RS,PPNA,PFP,taux_acquistion,PD,tc_prime = 0.05 , tc_sinistre = 0.03){
cad_liq0 = cad_liq[-1]
cad_actualiser = cad_liq0/((1+ZC[1:length(cad_liq0)])^(1:length(cad_liq0)))
cad_actualiser_cumule = rev(cumsum(rev(cad_actualiser)))
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
PFPA = (1-taux_acquistion)*PFP_Vect
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFPA
BEPrimes_Cede = tc_prime*BEPrimes
BESinistre = r_hat/((1+ZC[1:length(r_hat)])^(1:length(r_hat)))
BESinistre = rev(cumsum(rev(BESinistre)))
BESinistre_Cede = tc_sinistre*BESinistre
BE_ENG_Cede = BESinistre_Cede+BEPrimes_Cede
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BE_ENG_Cede), y = as.list(1:length(BE_ENG_Cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
}
# Opeération d'assurance vie
Ajustement_DC_NVie <- \(r_hat,cad_liq,ZC,RS,PPNA,PFP,taux_acquistion,PD,tc_prime = 0.05 , tc_sinistre = 0.03){
cad_liq0 = cad_liq[-1]
cad_actualiser = cad_liq0/((1+ZC[1:length(cad_liq0)])^(1:length(cad_liq0)))
cad_actualiser_cumule = rev(cumsum(rev(cad_actualiser)))
PFP_Vect = c(PFP,rep(0,length(cad_liq0)-1))
PFPA = (1-taux_acquistion)*PFP_Vect
BEPrimes = RS*(PPNA+PFP_Vect)*cad_actualiser_cumule-PFPA
BEPrimes_Cede = tc_prime*BEPrimes
BESinistre = r_hat/((1+ZC[1:length(r_hat)])^(1:length(r_hat)))
BESinistre = rev(cumsum(rev(BESinistre)))
BESinistre_Cede = tc_sinistre*BESinistre
BE_ENG_Cede = BESinistre_Cede+BEPrimes_Cede
Adj_i = Map(\(x,y){
0.5*max(x,0)*PD*(1-PD)^(y-1)
}, x = as.list(BE_ENG_Cede), y = as.list(1:length(BE_ENG_Cede)))
Adj_i = unlist(Adj_i)
Adj_act_i = Adj_i/((1+ZC[1:length(Adj_i)])^(1:length(Adj_i)))
sum(Adj_act_i)
}
Ajustement_DC_NVie(r_hat,cad_liq,ZC,RS,PPNA,PFP,taux_acquistion,PD,tc_prime = 0.05 , tc_sinistre = 0.03)
shiny::runApp()
runApp()
max(Duree_contrat+Annee)
annees
max(Duree_contrat+annees)
Annee
runApp()
df_capitaux = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,
deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
df_capitaux = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,
deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
Mat_Proj_Cap <- function(df_capitaux,Duree_contrat_rest,ages,choc = 0){
mat_ages = Mat_Ages(Duree_contrat_rest,ages)
mat_tqx =(1+choc) * Mat_tQx(mat_ages)
mat_tpx = 1 -  mat_tqx
mat_tpx = cbind(1,mat_tpx[,-ncol(mat_tpx)])
mat_tpx_cumul = t(apply(mat_tpx,1,cumprod))
# Matrice de projection des capitaux
mat_tqx*df_capitaux*mat_tpx_cumul
}
proj_cap = Mat_Proj_Cap(df_capitaux,Duree_contrat_rest,ages,choc = 0)
proj_cap_choc_003 = Mat_Proj_Cap(df_capitaux,Duree_contrat_rest,ages,choc = 0.3)
proj_cap_choc_002 = Mat_Proj_Cap(df_capitauxDuree_contrat_rest,ages,choc = 0.2)
ages
# Calculs vie -------
df_capitaux = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,
deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
Mat_Proj_Cap <- function(df_capitaux,Duree_contrat_rest,ages,choc = 0){
mat_ages = Mat_Ages(Duree_contrat_rest,ages)
mat_tqx =(1+choc) * Mat_tQx(mat_ages)
mat_tpx = 1 -  mat_tqx
mat_tpx = cbind(1,mat_tpx[,-ncol(mat_tpx)])
mat_tpx_cumul = t(apply(mat_tpx,1,cumprod))
# Matrice de projection des capitaux
mat_tqx*df_capitaux*mat_tpx_cumul
}
proj_cap = Mat_Proj_Cap(df_capitaux,Duree_contrat_rest,ages,choc = 0)
proj_cap_choc_003 = Mat_Proj_Cap(df_capitaux,Duree_contrat_rest,ages,choc = 0.3)
proj_cap_choc_002 = Mat_Proj_Cap(df_capitaux,Duree_contrat_rest,ages,choc = 0.2)
runApp()
runApp()
sum(proj_cap)
runApp()
runApp()
runApp()
runApp()
NB_contrat = NBContrat(ages,Duree_contrat_rest,choc = 0)
NBContrat <- function(ages,Duree_contrat_rest,choc = 0){
mat_ages = Mat_Ages(Duree_contrat_rest,ages)
mat_tqx =(1+choc) * Mat_tQx(mat_ages)
NB_contrat = 1-mat_tqx
NB_contrat = t(apply(NB_contrat,1,cumprod))
max_duree_rest = max(Duree_contrat_rest)
mat_duree = Map(\(x){
c(rep(1,x),rep(0,max_duree_rest-x))
}, x = Duree_contrat_rest)
mat_duree = as.data.frame(mat_duree)
mat_duree = t(mat_duree)
rownames(mat_duree) = NULL
NB_contrat = NB_contrat*mat_duree
NB_contrat = apply(NB_contrat,2,sum)
NB_contrat
}
NB_contrat = NBContrat(ages,Duree_contrat_rest,choc = 0)
NB_contrat
NB_contrat = NBContrat(ages,Duree_contrat_rest,choc = 0.2)
NB_contrat
runApp()
BE_ENG_Cede
runApp()
runApp()
runApp()
runApp()
runApp()
styler:::style_selection()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
proj_cap()
proj_cap
runApp()
proj_cap
proj_cap_vect
apply(proj_cap,2,sum)
apply(proj_cap,1,sum)
dim(proj_cap)
runApp()
df_capitaux %>% View()
proj_cap %>% View()
proj_cap
View(proj_cap)
library(readxl)
deces_deg_unique <- read_excel("Data/deces_deg_unique.xlsx")
View(deces_deg_unique)
mat_ages = Mat_Ages(deces_deg_unique$`Durre contrat restante`,deces_deg_unique$Age)
mat_ages
View(Mat_tQx(mat_ages))
df_capitaux = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,
deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
df_capitaux = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,
deces_deg_unique$Dur_e_de_contrat,deces_deg_unique$Capital_d_c_s_initial)
df_capitaux = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,
deces_deg_unique$Capital_d_c_s_initial,
max(deces_deg_unique$`Durre contrat restante`))
Matrice_Capitaux <- function(Annee,maturite,cap_initial,
max_duree_rest = max(Duree_contrat_rest),annee_max_proj = 2042){
result = Map(
function(x, y, z) {
T_AMORT = tableau_amort(x,y,z,annee_max_proj)
T_AMORT = tail(T_AMORT,max_duree_rest)
T_AMORT$CRP
},
x = Annee,
y= maturite,
z = cap_initial
)
df_result = as.data.frame(result)
df_result = t(df_result)
rownames(df_result) = NULL
df_result
}
df_capitaux = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,
deces_deg_unique$Capital_d_c_s_initial,
max(deces_deg_unique$`Durre contrat restante`))
max_duree_rest = max(deces_deg_unique$`Durre contrat restante`)
Annee = deces_deg_unique$`Année d'effet`
maturite = deces_deg_unique$Dur_e_de_contrat
cap_initial = deces_deg_unique$Capital_d_c_s_initial
result = Map(
function(x, y, z) {
T_AMORT = tableau_amort(x,y,z,annee_max_proj)
T_AMORT = tail(T_AMORT,max_duree_rest)
T_AMORT$CRP
},
x = Annee,
y= maturite,
z = cap_initial
)
annee_max_proj = 2042
result = Map(
function(x, y, z) {
T_AMORT = tableau_amort(x,y,z,annee_max_proj)
T_AMORT = tail(T_AMORT,max_duree_rest)
T_AMORT$CRP
},
x = Annee,
y= maturite,
z = cap_initial
)
result
df_result = as.data.frame(result)
df_result = t(df_result)
rownames(df_res) = NULL
rownames(df_result) = NULL
View(df_result)
df_result = as.data.frame(result)
df_result = t(df_result)
Matrice_Capitaux <- function(Annee,maturite,cap_initial,
max_duree_rest = max(Duree_contrat_rest),annee_max_proj = 2042){
result = Map(
function(x, y, z) {
T_AMORT = tableau_amort(x,y,z,tx_interet = 0.04,annee_max_proj)
T_AMORT = tail(T_AMORT,max_duree_rest)
T_AMORT$CRP
},
x = Annee,
y= maturite,
z = cap_initial
)
df_result = as.data.frame(result)
df_result = t(df_result)
rownames(df_result) = NULL
df_result
}
df_capitaux = Matrice_Capitaux(deces_deg_unique$`Année d'effet`,
deces_deg_unique$Capital_d_c_s_initial,
max(deces_deg_unique$`Durre contrat restante`))
result = Map(
function(x, y, z) {
T_AMORT = tableau_amort(x,y,z,tx_interet = 0.04,annee_max_proj)
T_AMORT = tail(T_AMORT,max_duree_rest)
T_AMORT$CRP
},
x = Annee,
y= maturite,
z = cap_initial
)
df_result = as.data.frame(result)
df_result = t(df_result)
rownames(df_result) = NULL
df_result
df_capitaux = Matrice_Capitaux(Annee = deces_deg_unique$`Année d'effet`,
maturite = deces_deg_unique$Dur_e_de_contrat,
deces_deg_unique$Capital_d_c_s_initial,
max(deces_deg_unique$`Durre contrat restante`))
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
styler:::style_selection()
styler:::style_selection()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
x = 1:10
x[-1] = rep(2,9)
x
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
